<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.samgyeobsal.mapper.MakerMapper">

    <select id="findFundingMakerByFundingId" resultType="fundingMaker">
        select
            f.fid, f.fstore_name, f.ftitle, f.fsummary,f.fstory,f.fdate, f.fstatus, f.faddress,
            f.memail, f.ctid, ct.ctname, f.fthumb, f.cid, f.tid,  tmp.hasProduct, tmp2.hasImg
        from funding f
        left join category ct on (ct.ctid = f.ctid)
        inner join (
            select funding.fid, decode(count(funding_product.fpid),0,0,1) hasProduct
            from funding
            left join funding_product on (funding.fid = funding_product.fid)
            group by funding.fid
        ) tmp on (f.fid = tmp.fid)
        inner join (
            select funding.fid, decode(count(funding_img.fiid),0,0,1) hasImg
            from funding
            left join funding_img on (funding.fid = funding_img.fid)
            group by funding.fid
        ) tmp2 on (f.fid = tmp2.fid)
        where f.fid = #{fundingId}
    </select>

    <insert id="insertFunding">
        insert into funding (fid, memail, fstatus)
        values (#{fid}, #{memail}, 'PREPARING')
    </insert>

    <update id="updateFundingBaseInfo">
        update funding
        set fstore_name = #{fstore_name},
            fthumb = #{fthumb},
            ctid = #{ctid},
            cid = #{cid},
            tid = #{tid},
            faddress = #{faddress}
        where fid = #{fid}
    </update>

    <select id="findFundingImgListByFundingId" resultType="fundingImg">
        select fi.fiid, fi.fiurl, fi.fid
        from funding_img fi
        where fi.fid = #{fundingId}
    </select>

    <update id="updateFundingStory" >
        update funding
        set ftitle = #{ftitle},
            fsummary = #{fsummary},
            fstory = #{fstory}
        where fid = #{fid}
    </update>

    <delete id="deleteFundingImgsByFundingId">
        delete from funding_img
        where fid = #{fundingId}
    </delete>

    <update id="insertFundingImgs" parameterType="java.util.List">
        <foreach open="INSERT ALL" close="SELECT 1 FROM DUAL"
                 index="index" collection="imgs" item="fundingImg" separator=" ">
        into funding_img (fid, fiid, fiurl)
        values (#{fundingImg.fid}, #{fundingImg.fiid}, #{fundingImg.fiurl})
        </foreach>
    </update>

    <insert id="insertFundingProduct">
        insert into funding_product
            (fpid, fid, fporigin_price, fpprice, fptitle, fpcontent, fpstatus)
        values (#{fpid}, #{fid}, #{originPrice}, #{price}, #{title}, #{content}, 1)
    </insert>

    <update id="updateFundingProduct">
        update funding_product
        set fporigin_price = #{originPrice},
            fpprice = #{price},
            fptitle = #{title},
            fpcontent = #{content}
        where fpid = #{fpid} and fid = #{fid}
    </update>

    <update id="deleteAllFundingProductOption">
        update product_option
        set postatus = '0'
        where fpid = #{fpid}
    </update>

    <update id="updateProductOption">
        merge into product_option po
        using (
            select #{poid} poid, #{pooption} pooption, #{fpid} fpid
            from dual
            ) u
        on (po.poid = u.poid)
        when matched then
            update set po.pooption = u.pooption, po.postatus = '1'
        when not matched then
            insert (poid, pooption, fpid, postatus)
            values (u.poid, u.pooption, u.fpid, '1')
    </update>

    <update id="deleteFundingProduct">
        update funding_product
        set fpstatus = '0'
        where fpid = #{fpid}
    </update>
</mapper>