name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    # caching dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # build
    - name: Build with Maven
      run: mvn -Dmaven.test.skip=true -B package --file pom.xml
      
    # packaging
    - name: Make Directory and file copy 
      run: mkdir deploy && cp target/*.jar deploy/ && cp appspec.yml deploy/ && cp script/deploy.sh deploy/

    # zip
    - name: Make zip file
      run: zip -r -qq -j thechef.site.zip deploy
      
    # aws access
    - name: AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2

    # aws s3
    - name: Upload to AWS S3
      run: aws s3 cp --region ap-northeast-2 thechef.site.zip s3://thechef.site.artifact/
      
    # aws codedeploy
    - name: Run to AWS Codedeploy
      run: aws deploy create-deployment --application-name thechef.site-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name thechef.site-deploy-group --s3-location bucket=thechef.site.artifact,bundleType=zip,key=thechef.site.zip
